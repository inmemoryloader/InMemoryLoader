<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{03EBE292-5758-4919-A3A9-AAA31313FC1F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>InMemoryLoader</RootNamespace>
    <AssemblyName>InMemoryLoader</AssemblyName>
    <Description>InMemoryLoader ist eine in C# geschriebene Funktionsbibliothek welche 
das dynamische Laden von .NET Assemblies zur Laufzeit ermöglicht.</Description>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <ReleaseVersion>1.0.0</ReleaseVersion>
    <PackOnBuild>true</PackOnBuild>
    <PackageId>InMemoryLoader</PackageId>
    <PackageVersion>1.0.6933.201</PackageVersion>
    <Owners>responsive kaysta</Owners>
    <Title>Im Wesentlichen besteht InMemoryLoader aus zwei nuget-Packages die mit Mono entwickelt wurden und so über Plattformgrenzen hinweg verwendet werden können.</Title>
    <PackageProjectUrl>https://blog.responsive-kaysta.ch/post/inmemoryloader</PackageProjectUrl>
    <Summary>InMemoryLoader ermöglicht das Laden von .Dll's zur Laufzeit ohne fixe Referenzen in der Solution zu benötigen. Hierbei werden die .Dll’s einmalig geladen und geprüft, in eine Collection geschrieben und zur Laufzeit einmalig instanziiert.</Summary>
    <Authors>responsive kaysta</Authors>
    <PackageLicenseUrl>https://de.wikipedia.org/wiki/MIT-Lizenz</PackageLicenseUrl>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>InMemoryLoader.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DocumentationFile>
    </DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="log4net, Version=2.0.8.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a">
      <HintPath>..\packages\log4net.2.0.8\lib\net45-full\log4net.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core" />
    <Reference Include="InMemoryLoaderBase">
      <HintPath>..\packages\InMemoryLoaderBase.1.0.6956.40763\lib\InMemoryLoaderBase.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ComponentLoader.Instance.cs" />
    <Compile Include="ComponentLoader.Init.cs" />
    <Compile Include="ComponentLoader.Get.cs" />
    <Compile Include="ComponentLoader.Invoke.cs" />
    <Compile Include="ComponentLoader.Helper.cs" />
    <Compile Include="Helper\ObjectHelper.cs" />
    <Compile Include="AbstractLoaderBase.cs" />
    <Compile Include="Extension\DateTimeExtension.cs" />
    <Compile Include="Extension\EnumParserExtension.cs" />
    <Compile Include="Extension\HtmlEncodeExtension.cs" />
    <Compile Include="Extension\StringExtension.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
</Project>