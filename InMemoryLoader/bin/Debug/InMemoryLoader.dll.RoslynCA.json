{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "2.8.0.0",
        "fileVersion": "2.8.2.62916 (2ad4aabc)",
        "semanticVersion": "2.8.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 13,
                  "endLine": 58,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1523",
          "level": "warning",
          "message": "Make sure that this dynamic injection or execution of code is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Helper/ObjectHelper.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 25,
                  "endLine": 44,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Helper/ObjectHelper.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 79,
                  "endLine": 43,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1523",
          "level": "warning",
          "message": "Make sure that this dynamic injection or execution of code is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Helper/ObjectHelper.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 25,
                  "endLine": 57,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Helper/ObjectHelper.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 82,
                  "endLine": 56,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/AbstractLoaderBase.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 61,
                  "endLine": 112,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str1'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str2'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str3'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str4'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str5'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str6'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'str7'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/HtmlEncodeExtension.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 17,
                  "endLine": 56,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 17,
                  "endLine": 84,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 13,
                  "endLine": 82,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 13,
                  "endLine": 105,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 17,
                  "endLine": 130,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/Extension/EnumParserExtension.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/AbstractLoaderBase.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 104,
                  "endLine": 130,
                  "endColumn": 131
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Init.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1523",
          "level": "warning",
          "message": "Make sure that this dynamic injection or execution of code is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 70,
                  "endLine": 51,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1523",
          "level": "warning",
          "message": "Make sure that this dynamic injection or execution of code is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 38,
                  "endLine": 55,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 35,
                  "endLine": 62,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 23,
                  "endLine": 69,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'assembly' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 68,
                  "endLine": 51,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3885",
          "level": "warning",
          "message": "Replace this call to 'Assembly.LoadFrom' with 'Assembly.Load'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 79,
                  "endLine": 51,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 62,
                  "endLine": 46,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 70,
                  "endLine": 50,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 23,
                  "endLine": 44,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1523",
          "level": "warning",
          "message": "Make sure that this dynamic injection or execution of code is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Invoke.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 30,
                  "endLine": 45,
                  "endColumn": 164
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Invoke.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 34,
                  "endLine": 41,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 52,
                  "endLine": 43,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 47,
                  "endLine": 57,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 64,
                  "endLine": 57,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Get.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 25,
                  "endLine": 61,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/kaysta/Dev/InMemoryLoader/InMemoryLoader/ComponentLoader.Invoke.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code's readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1523": {
          "id": "S1523",
          "shortDescription": "Dynamically executing code is security-sensitive",
          "fullDescription": "Executing code dynamically is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1523",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "NotConfigurable"
            ]
          }
        },
        "S2737": {
          "id": "S2737",
          "shortDescription": "\"catch\" clauses should do more than rethrow",
          "fullDescription": "A catch clause that only rethrows the caught exception has the same effect as omitting the catch altogether and letting it bubble up automatically, but with more code and the additional detriment of leaving maintainers scratching their heads. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2737",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3885": {
          "id": "S3885",
          "shortDescription": "\"Assembly.Load\" should be used",
          "fullDescription": "The parameter to Assembly.Load includes the full specification of the dll to be loaded. Use another method, and you might end up with a dll other than the one you expected. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3885",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}